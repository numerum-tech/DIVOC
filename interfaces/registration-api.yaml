swagger: "2.0"
info:
  title: Registration API
  description: Registration API
  version: 1.0.0
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
schemes:
  - https
basePath: /divoc/api/citizen
consumes:
  - application/json
produces:
  - application/json
paths:
  /appointment:
    delete:
      summary: Delete the appointment
      operationId: deleteAppointment
      security:
       - Bearer: [ ]
      parameters:
        - in: body
          name: body
          schema:
            type: object
            required:
              - enrollmentCode
              - programId
              - dose
            properties:
              enrollmentCode:
                type: string
              programId:
                type: string
              dose:
                type: string
      responses:
        '200':
          description: OK
          schema:
            type: object
        '400':
          description: Bad Request
          schema:
            type: object
            properties:
              message:
                type: string
        '401':
          description: Unauthorized
    post:
      summary: Book a slot in facility
      operationId: bookSlotOfFacility
      security:
        - Bearer: [ ]
      parameters:
        - in: body
          name: body
          schema:
            type: object
            required:
              - facilitySlotId
              - enrollmentCode
              - programId
              - dose
            properties:
              facilitySlotId:
                type: string
              enrollmentCode:
                type: string
              programId:
                type: string
              dose:
                type: string
      responses:
        '200':
          description: OK
          schema:
            type: object
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
  /facility/slots:
    get:
      summary: Get slots for facilites
      operationId: getSlotsForFacilities
      security:
        - Bearer: [ ]
      parameters:
        - in: query
          name: facilityId
          type: string
        - in: query
          name: pageNumber
          type: integer
          default: 0
        - in: query
          name: pageSize
          type: integer
          default: 0
      responses:
        '200':
          description: OK
          schema:
            type: object
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
  /facility/slots/init:
    post:
      summary: Initialize facility slots
      operationId: initializeFacilitySlots
      security: [ ]
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              apiKey:
                type: string
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized

  /recipients:
    delete:
      summary: Delete the recipient
      operationId: deleteRecipient
      security:
        - Bearer: [ ]
      parameters:
        - in: body
          name: body
          schema:
            type: object
            required:
              - enrollmentCode
            properties:
              enrollmentCode:
                type: string
      responses:
        '200':
          description: OK
          schema:
            type: object
        '400':
          description: Bad Request
          schema:
            type: object
            properties:
              message:
                type: string
        '401':
          description: Unauthorized
    post:
      summary: Enroll Recipient
      operationId: enrollRecipient
      security:
        - Bearer: [ ]
      parameters:
        - in: body
          name: body
          schema:
            $ref: '../registry/Enrollment.json#/definitions/Enrollment'
          description: Recipient Details
      responses:
        '200':
          description: OK
        '401':
          description: Invalid token
    get:
      summary: Get all the recipients
      operationId: getRecipients
      security:
        - Bearer: [ ]
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              type: object
              $ref: '../registry/Enrollment.json#/definitions/Enrollment'
        '401':
          description: Invalid token
        '500':
          description: Something went wrong

  /generateOTP:
   post:
     summary: Generate OTP
     operationId: generateOTP
     security: []
     parameters:
       - in: body
         name: body
         required: true
         schema:
          type: object
          properties:
            phone:
              type: string
     responses:
       '200':
         description: OK
       '204':
         description: Phone number is empty
       '500':
         description: Internal Error
       '400':
         description: Bad request
  /verifyOTP:
    post:
      summary: Verify OTP
      operationId: verifyOTP
      security: []
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              phone:
                type: string
              otp:
                type: string
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              token:
                type: string
        '401':
          description: Invalid OTP
        '400':
          description: Bad request
        '500':
          description: Internal error
        '429':
          description: Verify otp attempts exceeded, generate new OTP
  /ping:
    get:
      summary: Server heartbeat operation
      description: >-
        This operation shows how to override the global security defined above,
        as we want to open it up for all users.
      security: []
      responses:
        '200':
          description: OK
